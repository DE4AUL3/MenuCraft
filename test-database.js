// –°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è PostgreSQL API
const API_BASE = 'http://localhost:3000/api/test-db';

// –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
const testCategory = {
  nameRu: '–û—Å–Ω–æ–≤–Ω—ã–µ –±–ª—é–¥–∞',
  nameTk: 'Esasy a≈ülar',
  descriptionRu: '–í–∫—É—Å–Ω—ã–µ –æ—Å–Ω–æ–≤–Ω—ã–µ –±–ª—é–¥–∞ –Ω–∞—à–µ–≥–æ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞',
  descriptionTk: 'Restoranymyzy≈à tagamly esasy a≈ülary',
  imageCard: '/images/categories/main-dishes.jpg',
  imageBackground: '/images/backgrounds/main-bg.jpg',
  order: 1,
  status: true
};

const testMeal = {
  nameRu: '–ü–ª–æ–≤ —Å –±–∞—Ä–∞–Ω–∏–Ω–æ–π',
  nameTk: 'Go√Ωun etli palaw',
  categoryId: '', // –ó–∞–ø–æ–ª–Ω–∏–º –ø–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
  price: 25.50,
  descriptionRu: '–¢—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω—ã–π —É–∑–±–µ–∫—Å–∫–∏–π –ø–ª–æ–≤ —Å —Å–æ—á–Ω–æ–π –±–∞—Ä–∞–Ω–∏–Ω–æ–π',
  descriptionTk: '≈ûireli go√Ωun etli d√§p bi≈üirilen √∂zbeki≈à d√§p palowy',
  image: '/images/meals/plov.jpg'
};

const testOrder = {
  phoneNumber: '+99365123456',
  products: [
    {
      id: '', // –ó–∞–ø–æ–ª–Ω–∏–º –ø–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è –±–ª—é–¥–∞
      amount: 2
    }
  ]
};

async function testAPI() {
  console.log('üöÄ –ù–∞—á–∏–Ω–∞–µ–º —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ PostgreSQL API...\n');

  try {
    // 1. –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    console.log('1Ô∏è‚É£ –°–æ–∑–¥–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é...');
    const categoryResponse = await fetch(`${API_BASE}/categories`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify(testCategory)
    });

    if (!categoryResponse.ok) {
      throw new Error(`–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏: ${categoryResponse.status}`);
    }

    const categoryResult = await categoryResponse.json();
    console.log('‚úÖ –ö–∞—Ç–µ–≥–æ—Ä–∏—è —Å–æ–∑–¥–∞–Ω–∞:', categoryResult.data);
    const categoryId = categoryResult.data.id;

    // 2. –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
    console.log('\n2Ô∏è‚É£ –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π...');
    const categoriesResponse = await fetch(`${API_BASE}/categories`);
    const categoriesResult = await categoriesResponse.json();
    console.log('‚úÖ –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø–æ–ª—É—á–µ–Ω—ã:', categoriesResult.data.length, '—à—Ç.');

    // 3. –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –±–ª—é–¥–∞
    console.log('\n3Ô∏è‚É£ –°–æ–∑–¥–∞–µ–º –±–ª—é–¥–æ...');
    testMeal.categoryId = categoryId;
    const mealResponse = await fetch(`${API_BASE}/meals`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify(testMeal)
    });

    if (!mealResponse.ok) {
      throw new Error(`–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –±–ª—é–¥–∞: ${mealResponse.status}`);
    }

    const mealResult = await mealResponse.json();
    console.log('‚úÖ –ë–ª—é–¥–æ —Å–æ–∑–¥–∞–Ω–æ:', mealResult.data);
    const mealId = mealResult.data.id;

    // 4. –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –±–ª—é–¥
    console.log('\n4Ô∏è‚É£ –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –±–ª—é–¥...');
    const mealsResponse = await fetch(`${API_BASE}/meals`);
    const mealsResult = await mealsResponse.json();
    console.log('‚úÖ –ë–ª—é–¥–∞ –ø–æ–ª—É—á–µ–Ω—ã:', mealsResult.data.length, '—à—Ç.');

    // 5. –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –∑–∞–∫–∞–∑–∞
    console.log('\n5Ô∏è‚É£ –°–æ–∑–¥–∞–µ–º –∑–∞–∫–∞–∑...');
    testOrder.products[0].id = mealId;
    const orderResponse = await fetch(`${API_BASE}/orders`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify(testOrder)
    });

    if (!orderResponse.ok) {
      throw new Error(`–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–∫–∞–∑–∞: ${orderResponse.status}`);
    }

    const orderResult = await orderResponse.json();
    console.log('‚úÖ –ó–∞–∫–∞–∑ —Å–æ–∑–¥–∞–Ω:', orderResult.data);

    // 6. –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –∑–∞–∫–∞–∑–æ–≤
    console.log('\n6Ô∏è‚É£ –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∑–∞–∫–∞–∑–æ–≤...');
    const ordersResponse = await fetch(`${API_BASE}/orders`);
    const ordersResult = await ordersResponse.json();
    console.log('‚úÖ –ó–∞–∫–∞–∑—ã –ø–æ–ª—É—á–µ–Ω—ã:', ordersResult.data.length, '—à—Ç.');

    console.log('\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ! PostgreSQL API —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –≤–æ –≤—Ä–µ–º—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error.message);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã –ø—Ä–∏ –≤—ã–∑–æ–≤–µ —Å–∫—Ä–∏–ø—Ç–∞
if (typeof window !== 'undefined') {
  // –ë—Ä–∞—É–∑–µ—Ä
  window.testAPI = testAPI;
  console.log('–§—É–Ω–∫—Ü–∏—è testAPI() –¥–æ—Å—Ç—É–ø–Ω–∞ –≤ –∫–æ–Ω—Å–æ–ª–∏ –±—Ä–∞—É–∑–µ—Ä–∞');
} else {
  // Node.js
  testAPI();
}