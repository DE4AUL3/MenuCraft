/* eslint-disable @typescript-eslint/no-require-imports */
// –î–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ imageService
export function diagnoseImageService() {
  console.log('üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ imageService...');
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º localStorage
  console.log('üì¶ –°–æ–¥–µ—Ä–∂–∏–º–æ–µ localStorage:');
  for (let i = 0; i < localStorage.length; i++) {
    const key = localStorage.key(i);
    if (key?.startsWith('image_')) {
      const value = localStorage.getItem(key);
      console.log(`  ${key}: ${value ? '–¥–∞–Ω–Ω—ã–µ –Ω–∞–π–¥–µ–Ω—ã' : '–¥–∞–Ω–Ω—ã–µ –ø—É—Å—Ç—ã'}`);
    }
  }
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º CMS –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
  console.log('üìÇ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π CMS:');
  try {
    const { cms } = require('../lib/cms');
    const categories = cms.getCategories();
    categories.forEach(cat => {
      console.log(`  –ö–∞—Ç–µ–≥–æ—Ä–∏—è ${cat.name}: –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ = ${cat.image}`);
      if (cat.image) {
        const { imageService } = require('../lib/imageService');
        const url = imageService.getImageUrl(cat.image);
        console.log(`    URL: ${url}`);
      }
    });
  } catch (error) {
    console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ CMS:', error);
  }
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–¥–µ—Ä–∂–∫—É –±—Ä–∞—É–∑–µ—Ä–∞
  console.log('üåê –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –±—Ä–∞—É–∑–µ—Ä–∞:');
  console.log(`  localStorage: ${typeof Storage !== 'undefined' ? '‚úÖ' : '‚ùå'}`);
  console.log(`  FileReader: ${typeof FileReader !== 'undefined' ? '‚úÖ' : '‚ùå'}`);
  console.log(`  Canvas: ${typeof HTMLCanvasElement !== 'undefined' ? '‚úÖ' : '‚ùå'}`);
  
  return true;
}

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –±—Ä–∞—É–∑–µ—Ä–µ
if (typeof window !== 'undefined') {
  window.diagnoseImageService = diagnoseImageService;
}